#Unit
function Unit(n:number) :: text:
    set {_split::*} to "%{_n}%" split at "." 
    if {_n} < 0:
        set {_n} to "%ceil({_n})%"
    else:
        set {_n} to "%floor({_n})%"
    set {_t} to "%{_n}%"
    if "%{_t}%" contains "-":
        set {_minus} to true
        replace all "-" with "" in {_t}
    loop round up length of {_t} / 3 times:
        set {_l} to last 3 characters of {_t}
        set {_t} to first length of {_t} - 3 characters of {_t}
        if loop-number = 1:
            set {_r} to "%{_l}%"
        else:
            set {_r} to "%{_l}%,%{_r}%"
        
    if {_split::2} is set:
        set {_r} to "%{_r}%.%{_split::2}%"
    if {_minus} is set:
        set {_r} to "-%{_r}%"
    return {_r}

function UnitEn(n:number) :: text:

    if {_n} < 1000:
        set {_r} to "%{_n}%"
    else if {_n} < 1000000:
        set {_r} to "%{_n}/1000%K"
    else if {_n} < 1000000000:
        set {_r} to "%{_n}/1000000%M"
    else if {_n} < 1000000000000:
        set {_r} to "%{_n}/1000000000%B"
    else if {_n} < 10000000000000000:
        set {_r} to "%{_n}/1000000000000%T"
    else if {_n} > 10000000000000000:
        set {_r} to "%{_n}/10000000000000000%Q"
    return {_r}
